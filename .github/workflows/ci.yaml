name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref || github.run_id }}
  cancel-in-progress: true

env:
  # 减少编译时间和缓存大小。
  RUSTFLAGS: -Dwarnings -Zshare-generics=y -Zthreads=0
  RUSTDOCFLAGS: -Dwarnings -Zshare-generics=y -Zthreads=0
  # 在各个作业中使用相同的 Rust 工具链，以便它们可以共享缓存。
  toolchain: nightly-2025-04-03

jobs:
  # 检查文档。
  docs:
    name: 文档检查
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 检出代码库
        uses: actions/checkout@v4

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.toolchain }}

      - name: 恢复 Rust 缓存
        id: cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci
          save-if: false

      - name: 安装构建依赖
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev

      - name: 检查文档
        run: cargo doc --locked --workspace --profile ci --all-features --document-private-items --no-deps

  # 运行 Bevy 的 Lint 检查。
  bevy-lints:
    name: Bevy Lint 检查
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 检出代码库
        uses: actions/checkout@v4

      - name: 安装 Rust 工具链（包含 bevy_lint）
        uses: TheBevyFlock/bevy_cli/bevy_lint@lint-v0.3.0

      - name: 恢复 Rust 缓存
        id: cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: ci
          save-if: false

      - name: 安装构建依赖
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev

      - name: 运行 Bevy Lint 检查
        run: bevy_lint --locked --workspace --all-targets --profile ci --all-features


  # 检查 Web 构建是否成功。
  check-web:
    name: 检查 Web 构建
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: 检出代码库
        uses: actions/checkout@v4

      - name: 安装 Rust 工具链
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.toolchain }}
          targets: wasm32-unknown-unknown

      - name: 恢复 Rust 缓存
        id: cache
        uses: Swatinem/rust-cache@v2
        with:
          shared-key: web-ci
          save-if: ${{ github.ref == 'refs/heads/main' }}

      - name: 安装构建依赖
        if: steps.cache.outputs.cache-hit != 'true'
        run: sudo apt-get update; sudo apt-get install --no-install-recommends libasound2-dev libudev-dev libwayland-dev

      - name: 检查 Web 构建
        run: cargo check --config 'profile.web.inherits="dev"' --profile ci --no-default-features --features dev --target wasm32-unknown-unknown
